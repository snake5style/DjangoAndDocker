###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /usr/src/firstcompose

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 ./apps

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/firstcompose/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the app user
RUN mkdir -p /home/bond

# create the app user
RUN addgroup -S bond && adduser -S bond -G bond

# create the appropriate directories
ENV HOME=/home/bond
ENV bond_HOME=/home/bond/web
RUN mkdir $bond_HOME
RUN mkdir $bond_HOME/staticfiles
RUN mkdir $bond_HOME/mediafiles
WORKDIR $bond_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/firstcompose/wheels /wheels
COPY --from=builder /usr/src/firstcompose/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-production.sh
COPY ./entrypoint-production.sh $bond_HOME

# copy project
COPY . $bond_HOME

#
RUN mkdir /static_volume
RUN chown -R 100 /static_volume
RUN mkdir /media_volume
RUN chown -R 100 /media_volume

# chown all the files to the app user
RUN chown -R bond:bond $bond_HOME

# change to the app user
USER bond

# run entrypoint.prod.sh
ENTRYPOINT ["/home/bond/web/entrypoint-production.sh"]
